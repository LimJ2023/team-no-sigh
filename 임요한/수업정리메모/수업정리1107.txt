  

코드의 네이밍 컨벤션은 영어 표기법을 상속받았다.
기본적으로 영어의 표기법을 준수한다.
영어에서 대문자로 쓰는 것
중요한 것
큰것
특정한 것을 가리키는 것
제목

예시
고유명사는 위치에 관계없이 대문자로 시작한다.
I went to Tokyo.
이름 앞에 오는 직함은 대문자로 쓴다.
Doctor Mr.Micheal
제목에 나오는 첫 단어의 첫글자, 마지막 단어의 첫글자, 관사의 첫글자는 대문자로 쓴다.
Marvel's The Avengers

네이밍 컨벤션

클래스(파스칼 표기법)
주로 클래스 이름에 사용
클래스가 프로그래밍에서 가장 주요하고 높은 위치에 있고, 고유명사처럼 특정되며, 명사로 돼 있기 때문
클래스 이름의 첫 글자는 어디에 위치하든 모두 첫 글자를 대문자로 쓴다.

변수, 함수(카멜 표기법)
주로 함수나 변수에 사용
영어의 기본은 명사가 관사가 아닌경우 첫 글자를 소문자로 시작한다.(형용사, 동사 등)
따라서 형용사난 동사로 시작하는 함수, 변수는 첫 글자를 소문자로 쓴다.

상수(모두 대문자)
상수는 영어표기법과 관계없이 변수와 구별하기 위해 모든 글자를 대문자로 쓰고, 언더스코어로 연결한다.

패키지, 모듈(모두 소문자)
클래스나 함수보다 더 높은 위치이지만 소문자로 쓴다.
패키지나 모듈이 클래스를 모으거나 함수를 담아놓은 통에 불과하기 때문
패키지 자체의 중요도가 낮다고 본것.
대문자로 쓸 경우 클래스 이름과 혼동할 수 있기 때문에 클래스와 구별하려는 실용적 목적도 있다.

CSS(BEM표기법)
.form {}
.form__button {}
.form__button--disabled {}
언더스코어 _ 두개(__)
대상의 요소나 부분을 의미
__button
하이픈 - 두개(—)
대상이나 요소의 상태나 속성을 의미
--disabled


좋은 이름의 기준
과거의 습관
변수 이름이 길면 오탈자가 많이 난다?
예전에는 긴 이름이 오탈자로 이어질 확률이 높았지만 요즘은 통합개발환경의 발전, 자동완성 등으로 그럴 확률이 줄었다.
길이보다는 검색이 잘 되고 주석없이 이해할 수 있는 것이 중요하다.

나쁜예
getUserName() // 사용자가 입력한 텍스트 인풋 필드에서 가져옴
getUserName() // DB에서 아이디와 일치하는 이름을 가져옴
getUserName() // 세션에서 아이디와 일치하는 이름을 가져옴

좋은예
getUserNameFromInputFiled()
getUserNameFromDB()
getUserNameFromSession()


